{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teacher\\\\Documents\\\\GitHub\\\\SimbirSoftInt\\\\client\\\\src\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Button, message } from \"antd\";\n// import {\n//   getUsers,\n//   countNewMessages,\n//   findChatMessages,\n//   findChatMessage,\n// } from \"../util/ApiUtil\";\n// import { useRecoilValue, useRecoilState } from \"recoil\";\n// import {\n//   loggedInUser,\n//   chatActiveContact,\n//   chatMessages,\n// } from \"../atom/globalState\";\n// import ScrollToBottom from \"react-scroll-to-bottom\";\n\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst Chat = props => {\n  _s();\n\n  //   const currentUser = useRecoilValue(loggedInUser);\n  const [text, setText] = useState(\"\");\n  const [contacts, setContacts] = useState([]); //   const [activeContact, setActiveContact] = useRecoilState(chatActiveContact);\n  //   const [messages, setMessages] = useRecoilState(chatMessages);\n\n  useEffect(() => {\n    // if (localStorage.getItem(\"accessToken\") === null) {\n    //   props.history.push(\"/login\");\n    // }\n    connect(); // loadContacts();\n  }, []); //   useEffect(() => {\n  //     // if (activeContact === undefined) return;\n  //     // findChatMessages(activeContact.id, currentUser.id).then((msgs) =>\n  //     //   setMessages(msgs)\n  //     // );\n  //     loadContacts();\n  //   }, [activeContact]);\n\n  const connect = () => {\n    const Stomp = require('@stomp/stompjs'); // var SockJS = require(\"sockjs-client\");\n    // SockJS = new SockJS(\"http://localhost:8080/ws\");\n\n\n    stompClient = new Stomp.Client();\n    stompClient.brokerURL = 'ws://localhost:8080/ws';\n    stompClient.onConnect(); // stompClient.onStompError = function (frame) {\n    //     // Will be invoked in case of error encountered at Broker\n    //     // Bad login/passcode typically will cause an error\n    //     // Complaint brokers will set `message` header with a brief message. Body may contain details.\n    //     // Compliant brokers will terminate the connection after any error\n    //     console.log('Broker reported error: ' + frame.headers['message']);\n    //     console.log('Additional details: ' + frame.body);\n    //   };\n\n    stompClient.activate();\n  };\n\n  const onConnected = () => {\n    console.log(\"connected\"); // console.log(currentUser);\n\n    stompClient.subscribe(\"/user/\" + 1 + \"/queue/messages\", onMessageReceived);\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const onMessageReceived = msg => {\n    const notification = JSON.parse(msg.body);\n    const active = JSON.parse(sessionStorage.getItem(\"recoil-persist\")).chatActiveContact; // if (active.id === notification.senderId) {\n    //   findChatMessage(notification.id).then((message) => {\n    //     const newMessages = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\n    //       .chatMessages;\n    //     newMessages.push(message);\n    //     setMessages(newMessages);\n    //   });\n    // } else {\n    //   message.info(\"Received a new message from \" + notification.senderName);\n    // }\n    // loadContacts();\n  };\n\n  const sendMessage = msg => {\n    if (msg.trim() !== \"\") {\n      const message = {\n        // senderId: currentUser.id,\n        // recipientId: activeContact.id,\n        // senderName: currentUser.name,\n        // recipientName: activeContact.name,\n        content: msg,\n        timestamp: new Date()\n      };\n      console.log(stompClient);\n      stompClient.publish({\n        destination: \"/app/chat\",\n        body: JSON.stringify(message)\n      }); //   const newMessages = [...messages];\n      //   newMessages.push(message);\n      //   setMessages(newMessages);\n    }\n  }; //   const loadContacts = () => {\n  //     const promise = getUsers().then((users) =>\n  //       users.map((contact) =>\n  //         countNewMessages(contact.id, currentUser.id).then((count) => {\n  //           contact.newMessages = count;\n  //           return contact;\n  //         })\n  //       )\n  //     );\n  //     promise.then((promises) =>\n  //       Promise.all(promises).then((users) => {\n  //         setContacts(users);\n  //         if (activeContact === undefined && users.length > 0) {\n  //           setActiveContact(users[0]);\n  //         }\n  //       })\n  //     );\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sidepanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"profile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"profile-img\" //   src={currentUser.profilePicture}\n            ,\n            className: \"online\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"currentUser.name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"status-options\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"status-online\",\n                className: \"active\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Online\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"status-away\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Away\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"status-busy\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Busy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"status-offline\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Offline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"contacts\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              clasclassNames: \"wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"contact-status online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                id: contact.id,\n                src: contact.profilePicture,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), contact.newMessages !== undefined && contact.newMessages > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"preview\",\n                  children: [contact.newMessages, \" new messages\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addcontact\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-user fa-fw\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-cog fa-fw\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"activeContact && activeContact.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"user_input\",\n            size: \"large\",\n            placeholder: \"Write your message...\",\n            value: text,\n            onChange: event => setText(event.target.value),\n            onKeyPress: event => {\n              if (event.key === \"Enter\") {\n                sendMessage(text);\n                setText(\"\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            icon: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-paper-plane\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this),\n            onClick: () => {\n              sendMessage(text);\n              setText(\"\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"s8hlhf9ci8DTCy9aqnIVk/CAzg4=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Teacher/Documents/GitHub/SimbirSoftInt/client/src/Chat.jsx"],"names":["React","useEffect","useState","stompClient","Chat","props","text","setText","contacts","setContacts","connect","Stomp","require","Client","brokerURL","onConnect","activate","onConnected","console","log","subscribe","onMessageReceived","onError","err","msg","notification","JSON","parse","body","active","sessionStorage","getItem","chatActiveContact","sendMessage","trim","message","content","timestamp","Date","publish","destination","stringify","map","contact","id","profilePicture","name","newMessages","undefined","event","target","value","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { Button, message } from \"antd\";\r\n// import {\r\n//   getUsers,\r\n//   countNewMessages,\r\n//   findChatMessages,\r\n//   findChatMessage,\r\n// } from \"../util/ApiUtil\";\r\n// import { useRecoilValue, useRecoilState } from \"recoil\";\r\n// import {\r\n//   loggedInUser,\r\n//   chatActiveContact,\r\n//   chatMessages,\r\n// } from \"../atom/globalState\";\r\n// import ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport \"./Chat.css\";\r\n\r\nvar stompClient = null;\r\nconst Chat = (props) => {\r\n//   const currentUser = useRecoilValue(loggedInUser);\r\n  const [text, setText] = useState(\"\");\r\n  const [contacts, setContacts] = useState([]);\r\n//   const [activeContact, setActiveContact] = useRecoilState(chatActiveContact);\r\n//   const [messages, setMessages] = useRecoilState(chatMessages);\r\n\r\n  useEffect(() => {\r\n    // if (localStorage.getItem(\"accessToken\") === null) {\r\n    //   props.history.push(\"/login\");\r\n    // }\r\n    connect();\r\n    // loadContacts();\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     // if (activeContact === undefined) return;\r\n//     // findChatMessages(activeContact.id, currentUser.id).then((msgs) =>\r\n//     //   setMessages(msgs)\r\n//     // );\r\n//     loadContacts();\r\n//   }, [activeContact]);\r\n\r\n  const connect = () => {\r\n    const Stomp = require('@stomp/stompjs');\r\n    // var SockJS = require(\"sockjs-client\");\r\n    // SockJS = new SockJS(\"http://localhost:8080/ws\");\r\n    stompClient =new Stomp.Client();\r\n    stompClient.brokerURL = 'ws://localhost:8080/ws';\r\n    stompClient.onConnect();\r\n    // stompClient.onStompError = function (frame) {\r\n    //     // Will be invoked in case of error encountered at Broker\r\n    //     // Bad login/passcode typically will cause an error\r\n    //     // Complaint brokers will set `message` header with a brief message. Body may contain details.\r\n    //     // Compliant brokers will terminate the connection after any error\r\n    //     console.log('Broker reported error: ' + frame.headers['message']);\r\n    //     console.log('Additional details: ' + frame.body);\r\n    //   };\r\n    stompClient.activate();\r\n  };\r\n\r\n  const onConnected = () => {\r\n    console.log(\"connected\");\r\n    // console.log(currentUser);\r\n    stompClient.subscribe(\r\n      \"/user/\" +1 + \"/queue/messages\",\r\n      onMessageReceived\r\n    );\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const onMessageReceived = (msg) => {\r\n    const notification = JSON.parse(msg.body);\r\n    const active = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\r\n      .chatActiveContact;\r\n\r\n    // if (active.id === notification.senderId) {\r\n    //   findChatMessage(notification.id).then((message) => {\r\n    //     const newMessages = JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\r\n    //       .chatMessages;\r\n    //     newMessages.push(message);\r\n    //     setMessages(newMessages);\r\n    //   });\r\n    // } else {\r\n    //   message.info(\"Received a new message from \" + notification.senderName);\r\n    // }\r\n    // loadContacts();\r\n  };\r\n\r\n  const sendMessage = (msg) => {\r\n    if (msg.trim() !== \"\") {\r\n      const message = {\r\n        // senderId: currentUser.id,\r\n        // recipientId: activeContact.id,\r\n        // senderName: currentUser.name,\r\n        // recipientName: activeContact.name,\r\n        content: msg,\r\n        timestamp: new Date(),\r\n      };\r\n      console.log(stompClient)\r\n      stompClient.publish({ destination:\"/app/chat\", body: JSON.stringify(message)});\r\n\r\n    //   const newMessages = [...messages];\r\n    //   newMessages.push(message);\r\n    //   setMessages(newMessages);\r\n    }\r\n  };\r\n\r\n//   const loadContacts = () => {\r\n//     const promise = getUsers().then((users) =>\r\n//       users.map((contact) =>\r\n//         countNewMessages(contact.id, currentUser.id).then((count) => {\r\n//           contact.newMessages = count;\r\n//           return contact;\r\n//         })\r\n//       )\r\n//     );\r\n\r\n//     promise.then((promises) =>\r\n//       Promise.all(promises).then((users) => {\r\n//         setContacts(users);\r\n//         if (activeContact === undefined && users.length > 0) {\r\n//           setActiveContact(users[0]);\r\n//         }\r\n//       })\r\n//     );\r\n//   };\r\n\r\n  return (\r\n    <div id=\"frame\">\r\n      <div id=\"sidepanel\">\r\n        <div id=\"profile\">\r\n          <div className=\"wrap\">\r\n            <img\r\n              id=\"profile-img\"\r\n            //   src={currentUser.profilePicture}\r\n            className=\"online\"\r\n              alt=\"\"\r\n            />\r\n            <p>{\"currentUser.name\"}</p>\r\n            <div id=\"status-options\">\r\n              <ul>\r\n                <li id=\"status-online\" className=\"active\">\r\n                  <span className=\"status-circle\"></span> <p>Online</p>\r\n                </li>\r\n                <li id=\"status-away\">\r\n                  <span className=\"status-circle\"></span> <p>Away</p>\r\n                </li>\r\n                <li id=\"status-busy\">\r\n                  <span className=\"status-circle\"></span> <p>Busy</p>\r\n                </li>\r\n                <li id=\"status-offline\">\r\n                  <span className=\"status-circle\"></span> <p>Offline</p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"search\" />\r\n        <div id=\"contacts\">\r\n          <ul>\r\n            {contacts.map((contact) => (\r\n              <li\r\n                // onClick={() => setActiveContact(contact)}\r\n                // class={\r\n                //   activeContact && contact.id === activeContact.id\r\n                //     ? \"contact active\"\r\n                //     : \"contact\"\r\n                // }\r\n              >\r\n                <div clasclassNames=\"wrap\">\r\n                  <span className=\"contact-status online\"></span>\r\n                  <img id={contact.id} src={contact.profilePicture} alt=\"\" />\r\n                  <div className=\"meta\">\r\n                    <p className=\"name\">{contact.name}</p>\r\n                    {contact.newMessages !== undefined &&\r\n                      contact.newMessages > 0 && (\r\n                        <p className=\"preview\">\r\n                          {contact.newMessages} new messages\r\n                        </p>\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div id=\"bottom-bar\">\r\n          <button id=\"addcontact\">\r\n            <i className=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i>{\" \"}\r\n            <span>Profile</span>\r\n          </button>\r\n          <button id=\"settings\">\r\n            <i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i>{\" \"}\r\n            <span>Settings</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"contact-profile\">\r\n          {/* <img src={activeContact && activeContact.profilePicture} alt=\"\" /> */}\r\n          <p>{\"activeContact && activeContact.name\"}</p>\r\n        </div>\r\n        {/* <ScrollToBottom className=\"messages\">\r\n          <ul>\r\n            {messages.map((msg) => (\r\n              <li class={msg.senderId === currentUser.id ? \"sent\" : \"replies\"}>\r\n                {msg.senderId !== currentUser.id && (\r\n                  <img src={activeContact.profilePicture} alt=\"\" />\r\n                )}\r\n                <p>{msg.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </ScrollToBottom> */}\r\n        <div className=\"message-input\">\r\n          <div className=\"wrap\">\r\n            <input\r\n              name=\"user_input\"\r\n              size=\"large\"\r\n              placeholder=\"Write your message...\"\r\n              value={text}\r\n              onChange={(event) => setText(event.target.value)}\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  sendMessage(text);\r\n                  setText(\"\");\r\n                }\r\n              }}\r\n            />\r\n\r\n            <button\r\n              icon={<i class=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>}\r\n              onClick={() => {\r\n                sendMessage(text);\r\n                setText(\"\");\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}